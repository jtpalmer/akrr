walltime_limit = 22

parser = "nwchem_parser.py"

# path to run script relative to AppKerDir on particular resource
executable = "execs"
input_param = "inputs/nwchem/aump2.nw"

run_script_pre_run = """#create working dir
export AKRR_TMP_WORKDIR=`mktemp -d {network_scratch}/nwchem.XXXXXXXXX`
echo "Temporary working directory: $AKRR_TMP_WORKDIR"
cd $AKRR_TMP_WORKDIR

#Copy inputs
cp {appkernel_dir}/{input_param} ./
INPUT=$(echo {appkernel_dir}/{input_param} | xargs basename )

ulimit -s unlimited

# set the NWCHEM_PERMANENT_DIR and NWCHEM_SCRATCH_DIR in the input file
# first, comment out any NWCHEM_PERMANENT_DIR and NWCHEM_SCRATCH_DIR in the input file
if [ -e $INPUT ]
then
    sed -i -e "s/scratch_dir/#/g" $INPUT
    sed -i -e "s/permanent_dir/#/g" $INPUT
    # then add our own
    echo "scratch_dir $AKRR_TMP_WORKDIR" >> $INPUT
    echo "permanent_dir $AKRR_TMP_WORKDIR" >> $INPUT
fi
"""

run_script_post_run = """#clean-up
cd $AKRR_TASK_WORKDIR
if [ "${{AKRR_DEBUG=no}}" = "no" ]
then
        echo "Deleting temporary files"
        rm -rf $AKRR_TMP_WORKDIR
else
        echo "Copying temporary files"
        cp -r $AKRR_TMP_WORKDIR workdir
        rm -rf $AKRR_TMP_WORKDIR
fi
"""

# adding recourd about app to db
# mod_appkernel_app_kernel_def:
#    ak_def_id, name, ak_base_name, processor_unit, enabled, description, visible, control_criteria
# mod_akrr_appkernels:
#    id,name,nodes_list
db_setup = {
    "mod_appkernel_app_kernel_def":
        (24, 'NWChem', 'nwchem', 'node', 0,
         """<a href="http://www.nwchem-sw.org" target="_blank" """
         """alt="nwchem">NWChem</a> is an ab initio computational chemistry software package developed by """
         """Pacific Northwest National Laboratory.\r\n<p>\r\nThe input to the benchmark runs is the """
         """Hartree-Fock energy calculation of Au+ with MP2 and Coupled Cluster corrections.\r\n<p>\r\n"""
         """The version of NWChem being benchmarked is 5.1.1.\r\n<p>\r\nThe metrics we show here contain NWChem''s """
         """self-collected Global Arrays statistics. The Global Arrays toolkit is the communication library used by """
         """NWChem to manipulate large akrrays distributed across compute nodes. The Global Arrays toolkit has """
         """three basic operations: Get (fetch values from remote memory), Put (store values to remote memory), """
         """and Accumulate (update values in remote memory). NWChem measures the numbers of these operations """
         """and the amount of data affected by them.""", 0, None),
    "mod_akrr_appkernels": (24, 'nwchem', '1;2;4;8'),
}
